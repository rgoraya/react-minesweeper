{"version":3,"sources":["won.gif","lost.gif","components/header.js","components/square.js","components/timer.js","components/game_controls.js","components/result.js","components/game_board.js","components/instructions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","Square","_this","this","result","concat","hasMine","minesAround","isTraversed","colorByMinesAround","isFlagged","onClick","handleSquareClick","onContextMenu","e","handleMineFlagging","location","preventDefault","Component","Timer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","seconds","progress","nextProps","setState","prevProps","prevState","startTimer","stopTimer","resetTimer","clearInterval","timer","setInterval","tick","bind","onGameEnd","formattedTime","Date","toISOString","substr","GameControls","difficulty","_this2","onGameReload","type","name","id","value","onChange","difficultySwitched","checked","htmlFor","timer_Timer","target","styles","won","backgroundImage","WonImg","lost","LostImg","Result","style","squaresRevealed","gameTime","GameBoard","pendingSquares","traversedSquares","mineLocations","boardSize","numberOfMines","flaggedSquares","buildBoardRows","assertThisInitialized","buildBoardColumns","square","toConsumableArray","includes","handleGameEnd","push","traverseBoard","length","getMinesAround","neighbors","getNeighbors","j","splice","totalTraversed","Math","pow","sqLocation","onlyWithMines","arguments","undefined","size","leftOutOfBounds","rightOutOfBounds","forEach","neighborPosition","neighborSq","resetGame","difficultyLevels","low","high","_this3","game_controls","randomLocation","floor","random","indexOf","rowArr","y","key","_this4","colArr","x","components_square","Instructions","App","header","game_board_GameBoard","gameInitialized","onGameStart","onGameStop","instructions","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc0ed7dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/won.0d5de60a.gif\";","module.exports = __webpack_public_path__ + \"static/media/lost.ecb5925e.gif\";","import React from 'react'\n\nconst Header = (props) => {\n  return (\n    <header className=\"header my-4 text-center\">\n      <h1 className=\"display-5 font-weight-light\">Minesweeper</h1>\n    </header>\n  )\n}\n\nexport default Header","import React,  { Component } from 'react'\n\nclass Square extends Component {\n  render () {\n    if (this.props.result) {\n      return (\n        <div \n          className={`\n            btn-sqaure justify-content-center border flex-fill d-flex align-items-center m-1 \n            ${this.props.hasMine ? (this.props.result === \"lost\" ? \"text-danger visible-mine\" : \"text-success visible-mine\" ) : \"text-dark\"} \n          `}\n        >{this.props.hasMine ? \n          (<span className=\"oi oi-fire\"></span>) : \n          (this.props.minesAround || null)}\n        </div>\n      )\n    } else if (this.props.isTraversed) { \n      return (\n        <div className={`\n          btn-sqaure justify-content-center border flex-fill d-flex align-items-center m-1\n          ${! this.props.minesAround ? \"empty\" : \"\"}\n          ${this.colorByMinesAround()}\n        `}>{this.props.minesAround || null}\n        </div>\n      )\n    } else {\n      return (\n        <button className={`\n          btn-sqaure btn border btn-light flex-fill rounded-0 p-0 text-center m-1 ${this.props.isFlagged ? \"border-info\" : \"border-dark\"}\n        `} \n          onClick = {() => this.handleSquareClick()}\n          onContextMenu = {(e) => this.handleMineFlagging(e)}\n        ></button>\n      )\n    }    \n  }\n  \n  handleSquareClick () {\n    if (!this.props.isTraversed) {\n      this.props.handleSquareClick(this.props.location)\n    }\n  }\n\n  handleMineFlagging (e) {\n    e.preventDefault();\n    if (!this.props.isTraversed) {\n      this.props.handleMineFlagging(this.props.location)\n    }\n  }\n\n  colorByMinesAround () {\n    switch (true) {\n      case (this.props.minesAround > 1 && this.props.minesAround < 3):\n        return 'text-danger'\n      case this.props.minesAround >= 3:\n        return 'text-dark-red'\n      case this.props.minesAround === 1:\n      default:\n        return 'text-dark' \n    }\n  }\n}\n\nexport default Square","import React, {Component} from 'react'\n\nexport default class Timer extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      seconds: 0,\n      progress: this.props.progress\n    }\n  }\n\n  componentWillUpdate (nextProps) {\n    if (nextProps.progress !== this.state.progress) {\n      this.setState({ progress: nextProps.progress });\n    }  \n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (prevState.progress !== this.state.progress) {\n      switch (this.state.progress) {\n        case \"on\": \n          this.startTimer();\n          break;\n        case \"off\":\n          this.stopTimer();\n          break;\n        case \"initial\":\n        default:\n          this.resetTimer();\n          break;\n      }\n    }\n  }\n\n  tick () {\n    this.setState({seconds: (this.state.seconds + 1)})\n  }\n\n  startTimer () {\n    clearInterval(this.timer);\n    this.timer = setInterval(this.tick.bind(this), 1000);\n  }\n\n  stopTimer () {\n    clearInterval(this.timer);\n    this.props.onGameEnd(this.formattedTime());\n  }\n\n  resetTimer () {\n    clearInterval(this.timer);\n    this.setState({ seconds: 0})\n  }\n\n  formattedTime() {\n    return new Date(this.state.seconds * 1000).toISOString().substr(11, 8)\n  }\n\n  render () {\n    return (\n      <div className=\"timer ml-3\">\n        { this.formattedTime() }\n        <span className=\"oi oi-clock ml-2\"></span>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Timer from './timer'\n\nclass GameControls extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      difficulty: this.props.difficulty\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"gamecontrols d-flex flex-row my-4 justify-content-center\">\n        <div className=\"mr-3\" >\n          <button className=\"btn btn-link text-dark p-0\" onClick = {() => this.props.onGameReload()} >\n            <span className=\"oi oi-reload\"></span>\n          </button>\n        </div>\n        <div className=\"form-check mx-3\">\n          <input className=\"form-check-input\" type=\"radio\" name=\"difficulty\" id=\"difficultLow\" value=\"low\" \n            onChange={(e) => this.difficultySwitched(e)}\n            checked={this.state.difficulty === \"low\"}\n          />\n          <label className=\"form-check-label\" htmlFor=\"difficultEasy\">Easy</label>\n        </div>\n        <div className=\"form-check mx-3\">\n          <input className=\"form-check-input\" type=\"radio\" name=\"difficulty\" id=\"difficultyHigh\" value=\"high\" \n            onChange={(e) => this.difficultySwitched(e)}\n            checked={this.state.difficulty === \"high\"}\n          />\n          <label className=\"form-check-label\" htmlFor=\"difficultyHigh\">Difficult</label>\n        </div>\n        <Timer \n          progress = {this.props.progress}\n          onGameEnd = {this.props.onGameEnd}\n        />\n      </div>\n    ) \n  }\n\n  difficultySwitched (e) {\n    let difficulty = e.target.value;\n    this.props.difficultySwitched(e.target.value);\n    this.setState({difficulty});\n  }  \n}\n\nexport default GameControls","import React from 'react'\nimport WonImg from '../won.gif'\nimport LostImg from '../lost.gif'\n\nconst styles = {\n  won: {\n    backgroundImage: `url(${WonImg})`\n  },\n  lost: {\n    backgroundImage: `url(${LostImg})`  \n  }\n}\n\nconst Result = (props) => {\n  if (props.result) {\n    return (\n      <div className=\"celebration d-flex flex-row my-4 justify-content-center\">\n        \n        <div className={`result mr-2 ${props.result}`} style={styles[props.result]}></div>\n        <p>You {props.result}! Squares Revealed: {props.squaresRevealed} | Time Taken: {props.gameTime}</p>\n      </div>\n    )\n  } else {\n    return null;\n  }\n}\n\nexport default Result","import React, { Component } from 'react';\nimport Square from './square';\nimport GameControls from './game_controls';\nimport Result from './result'\n\nexport default class GameBoard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.pendingSquares = [];\n    this.traversedSquares = [];\n\n    this.state = {\n      mineLocations: this.mineLocations(this.props.boardSize, this.props.numberOfMines),\n      traversedSquares: [],\n      flaggedSquares: [],\n      result: null,\n      progress: \"initial\",\n      difficulty: this.props.difficulty,\n      boardSize: this.props.boardSize,\n      numberOfMines: this.props.numberOfMines,\n      gameTime: null\n    }\n\n    this.buildBoardRows = this.buildBoardRows.bind(this);\n    this.buildBoardColumns = this.buildBoardColumns.bind(this);\n  }\n\n  \n  handleMineFlagging (square) {\n    this.setState({ flaggedSquares: [...this.state.flaggedSquares, square] })  \n  }\n\n  handleSquareClick (square) {\n    if (this.state.mineLocations.includes(square)) {\n      this.handleGameEnd(\"lost\")\n    } else {\n      this.traversedSquares = [];\n      this.pendingSquares = [];\n      this.pendingSquares.push(square);\n      this.traverseBoard();\n    }\n  }\n\n  traverseBoard () {\n    if (this.pendingSquares.length > 0) {\n      if (this.getMinesAround(this.pendingSquares[0]) === 0 && !this.traversedSquares.includes(this.pendingSquares[0]) && !this.state.traversedSquares.includes(this.pendingSquares[0])) {        \n          let neighbors = this.getNeighbors(this.pendingSquares[0]);\n          \n        for (let j=0; j < neighbors.length; j++) {\n          if (!this.pendingSquares.includes(neighbors[j])) {\n            this.pendingSquares.push(neighbors[j]);\n          }\n        }\n      } \n      \n      // mark as traversed\n      if (!this.traversedSquares.includes(this.pendingSquares[0])) {\n        this.traversedSquares.push(this.pendingSquares[0])\n      }\n\n      // remove from pending\n      this.pendingSquares.splice(0, 1);\n      // revisit\n      this.traverseBoard();\n      return;  \n    }\n    \n    let totalTraversed = [...this.state.traversedSquares, ...this.traversedSquares];\n\n    if (totalTraversed.length >= (Math.pow(this.state.boardSize, 2) - this.state.mineLocations.length)) {\n      this.handleGameEnd(\"won\");\n    } else {\n      this.setState( {\n        traversedSquares: totalTraversed,\n        progress: \"on\"\n      });\n    }\n  }\n\n  getMinesAround (sqLocation) {\n    let neighborsWithMines = (this.getNeighbors(sqLocation, true));\n    return neighborsWithMines.length;  \n  }\n\n  getNeighbors (sqLocation, onlyWithMines = false) {\n    let size = this.state.boardSize;\n    let neighborPositions = [-(size + 1),  -(size), -(size - 1), -1, 1, (size - 1), size, (size + 1)];\n    let leftOutOfBounds = [-(size + 1), -1, (size - 1)];\n    let rightOutOfBounds = [-(size - 1), 1, (size + 1)];\n    let neighbors = [];\n\n    neighborPositions.forEach((neighborPosition) => {\n      let neighborSq = neighborPosition + sqLocation;\n      // not out of bounds on the right\n      if (!( (sqLocation % size === 0) && rightOutOfBounds.includes(neighborPosition) )) { \n        // not out of bounds on the left\n        if (!( ((sqLocation -1) % size === 0) && leftOutOfBounds.includes(neighborPosition) )) {\n          // not out of bounds on top or bottom\n          if ((neighborSq > 0) && (neighborSq <= Math.pow(size, 2))) {\n            // check to see if we are here to get all valid neighbors or only ones with mines\n            if (!onlyWithMines || (onlyWithMines && this.state.mineLocations.includes(neighborSq)) ) {\n                neighbors.push(neighborSq)\n            }\n          }\n        }\n      }\n    });\n    return neighbors;\n  }\n\n  handleGameEnd(result) {\n    this.setState({ \n      result,  \n      progress: \"off\"\n    });\n  }\n\n  onGameReload () {\n    this.resetGame(this.state.difficulty, this.state.boardSize, this.state.numberOfMines)\n  }\n\n  difficultySwitched (difficulty) {\n    const difficultyLevels = {\n      low: { boardSize: 9, numberOfMines: 10 },\n      high: { boardSize: 12, numberOfMines: 20 }\n    };\n    const boardSize = difficultyLevels[difficulty].boardSize;\n    const numberOfMines = difficultyLevels[difficulty].numberOfMines;\n    \n    this.resetGame(difficulty, boardSize, numberOfMines);\n  }\n\n  resetGame (difficulty, boardSize, numberOfMines) {\n    this.setState({ \n      boardSize, \n      numberOfMines, \n      difficulty, \n      mineLocations: this.mineLocations(boardSize, numberOfMines),\n      progress: \"initial\",\n      traversedSquares: [],\n      flaggedSquares: [],\n      result: null \n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <GameControls\n          progress = {this.state.progress} \n          difficulty = {this.state.difficulty}\n          result = {this.state.result} \n          difficultySwitched = {(difficulty) => {this.difficultySwitched(difficulty)}}\n          onGameReload = {() => this.onGameReload()}\n          onGameEnd = {(gameTime) => { this.setState({ gameTime }) }} \n        />\n        {this.buildBoardRows()}\n        <Result \n          result = {this.state.result}\n          squaresRevealed = {this.state.traversedSquares.length}\n          gameTime = {this.state.gameTime} \n        />\n      </div>\n    )\n  }\n\n  mineLocations (boardSize, numberOfMines) {\n    let mineLocations = [];\n    while(mineLocations.length < numberOfMines ){\n        var randomLocation = Math.floor(Math.random()*(Math.pow(boardSize, 2))) + 1;\n        if (mineLocations.indexOf(randomLocation) > -1) continue;\n        mineLocations[mineLocations.length] = randomLocation;\n    }\n    return mineLocations\n  }\n  \n  buildBoardRows () {\n    let rowArr = [];\n    for (let y = 1; y <= this.state.boardSize; y++) {\n      rowArr.push(\n        <div className=\"gameboard d-flex flex-row justify-content-center\" key={y}>\n          {this.buildBoardColumns(y)}\n        </div>\n      )\n    }\n    return rowArr;\n  }\n\n  buildBoardColumns (y) {\n    let colArr = [];\n    for (let x=1; x<= this.state.boardSize; x++ ) {\n      let location = x+((y-1)*this.state.boardSize);\n\n      colArr.push(\n        <Square \n          hasMine = {this.state.mineLocations.includes(location)}\n          isTraversed = {this.state.traversedSquares.includes(location)}\n          isFlagged = {this.state.flaggedSquares.includes(location)}\n          minesAround = {this.getMinesAround(location)}\n          key = {location} \n          location = {location}\n          result = {this.state.result}\n          handleSquareClick = {(location) => this.handleSquareClick(location)}\n          handleMineFlagging = {(location) => this.handleMineFlagging(location)}\n        />\n      );\n    }\n    return colArr;\n  }\n}","import React from 'react'\n\nconst Instructions = () => {\n  return (\n    <div className=\"instructions d-flex flex-row justify-content-center mt-4\">\n      <div className=\"mr-3\">\n        <p className=\"mb-0\">Easy</p>\n        <small className=\"text-muted\">Board: 9x9 | Mines: 10</small>\n      </div>\n      <div className=\"mx-3\">\n        <p className=\"mb-0\">Difficult</p>\n        <small className=\"text-muted\">Board: 12x12 | Mines: 20</small>\n      </div>\n      <div className=\"ml-3\">\n        <p className=\"mb-0\">Flagging</p>\n        <small className=\"text-muted\">Right click to flag squares</small>\n      </div>\n    </div>\n  )\n}\n\nexport default Instructions;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header'\nimport GameBoard from './components/game_board'\nimport Instructions from './components/instructions'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      boardSize: 9,\n      numberOfMines: 10,\n      difficulty: \"low\"\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App container\">\n        <Header />\n        <GameBoard \n          boardSize = {this.state.boardSize}\n          numberOfMines = {this.state.numberOfMines}\n          difficulty = {this.state.difficulty}\n          gameInitialized = {this.state.gameInitialized}\n          onGameStart = {() => this.onGameStart()}\n          onGameStop = {() => this.onGameStop()}\n        />\n        <Instructions />\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}